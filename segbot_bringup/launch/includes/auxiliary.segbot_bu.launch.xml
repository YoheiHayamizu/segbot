<launch>

  <arg name="tf_prefix" default="" />
  <arg name="use_full_gazebo_model" default="false" />
  <arg name="urdf_file" default="$(find segbot_description)/robots/segbot_bu.urdf.xacro" />

  <arg name="launch_velodyne_nodelet_manager" default="true" />

  <!-- launch the appropriate urdf description, as well as the corresponding tf tree -->
  <param name="robot_description"
    command="$(find xacro)/xacro '$(arg urdf_file)' --inorder use_full_gazebo_model:=$(arg use_full_gazebo_model)" />

  <!-- launch the tf tree -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="5.0" />
  </node>

  <!-- launch the joint state publisher to default values -->
  <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" />

  <!-- sick_tim specification -->
  <node name="sick_tim" pkg="sick_tim" type="sick_tim551_2050001" respawn="false" output="screen">
    <!-- default values: -->
    <param name="range_max" type="double" value="20.0" />
    <param name="min_ang" type="double" value="-1.57" />
    <param name="max_ang" type="double" value="1.57" />
    <param name="intensity" type="bool" value="True" />
    <param name="skip" type="int" value="0" />
    <param name="frame_id" type="str" value="laser" />
    <param name="time_offset" type="double" value="-0.001" />
    <param name="publish_datagram" type="bool" value="False" />
    <param name="subscribe_datagram" type="bool" value="false" />
    <param name="device_number" type="int" value="0" />
    <param name="range_min" type="double" value="0.05" />
    <!-- Older versions of the scanner firmware report an incorrect time_increment.
         If you get a warning about time_increment, uncomment this. -->
    <!-- <param name="time_increment" type="double" value="0.000061722" /> -->

    <!-- Uncomment this to enable TCP instead of USB connection; 'hostname' is the host name or IP address of the laser scanner
    In cases where a race condition exists and the computer boots up before the TIM is ready, increase 'timelimit.' -->
         <param name="hostname" type="string" value="10.66.171.8" />
         <param name="port" type="string" value="2112" />
         <param name="timelimit" type="int" value="5" />
  </node>
  <include file="$(find segbot_sensors)/launch/sick_tim/sick_tim-filters.launch"></include>
  <node name="static_transform_publisher" type="static_transform_publisher" pkg="tf" 
    args="0 0 0 0 0 0 base_footprint laser 100"></node>


  <!-- Velodyne specific: launch the laserscan converter -->
  <!-- <include file="$(find segbot_sensors)/launch/velodyne/velodyne-laserscan.launch">
    <arg name="tf_prefix" value="$(arg tf_prefix)" />
    <arg name="in_topic" value="velodyne/points_filtered" />
    <arg name="launch_nodelet_manager" value="$(arg launch_velodyne_nodelet_manager)" />
  </include> -->

</launch>

